diff --git a/node_modules/@langchain/community/dist/experimental/llms/chrome_ai.js b/node_modules/@langchain/community/dist/experimental/llms/chrome_ai.js
index 044ad31..333ab20 100644
--- a/node_modules/@langchain/community/dist/experimental/llms/chrome_ai.js
+++ b/node_modules/@langchain/community/dist/experimental/llms/chrome_ai.js
@@ -70,24 +70,24 @@ export class ChromeAI extends LLM {
      */
     async createSession() {
         // eslint-disable-next-line @typescript-eslint/no-explicit-any
-        let aiInstance;
+        let LanguageModel;
         try {
             // eslint-disable-next-line @typescript-eslint/ban-ts-comment
             // @ts-ignore Experimental browser-only global
-            aiInstance = ai;
+            LanguageModel = LanguageModel;
             // eslint-disable-next-line @typescript-eslint/no-explicit-any
         }
         catch (e) {
             throw new Error(`Could not initialize ChromeAI instance. Make sure you are running a version of Chrome with the proper experimental flags enabled.\n\nError message: ${e.message}`);
         }
-        const { available } = await aiInstance.languageModel.capabilities();
-        if (available === "no") {
+        const availability = await LanguageModel.availability();
+        if (availability === "no") {
             throw new Error("The AI model is not available.");
         }
-        else if (available === "after-download") {
+        else if (availability === "after-download") {
             throw new Error("The AI model is not yet downloaded.");
         }
-        const session = await aiInstance.languageModel.create({
+        const session = await LanguageModel.create({
             systemPrompt: this.systemPrompt,
             topK: this.topK,
             temperature: this.temperature,
